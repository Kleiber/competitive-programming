/**
*  Generated by tpp tool
*  File: dp_i_back.cpp
*  Created: 27-02-2024 16:22:01
**/

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <bitset>
#include <sstream>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <stack>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
using namespace std;


int N;
vector<double> P;

double solve(int pos, int cont) {
  if(pos == N) {
    if(cont > N - cont) return 1;
    else return 0;
  }

  double ans = 0;

  ans += P[pos] * solve(pos + 1, cont + 1);
  ans += (1 - P[pos]) * solve(pos + 1, cont);

  return ans;
}

int main() {
    // do not remove this code if you use cin or cout
    ios::sync_with_stdio(false);
    cin.tie(0);

    cin>>N;

    P = vector<double>(N); 

    for(int i = 0; i < N; i++) cin>>P[i];

    printf("%0.10lf\n", solve(0, 0));

    return 0;
}

