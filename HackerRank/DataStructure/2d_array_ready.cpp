/**
*  Generated by tpp tool
*  File: 2d_array.cpp
*  Created: 11-01-2024 13:36:20
**/

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <bitset>
#include <sstream>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <stack>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
using namespace std;


#define SIZE 6
#define MOV 6
#define MAX 90

int main() {
    // do not remove this code if you use cin or cout
    ios::sync_with_stdio(false);
    cin.tie(0);

    vector<vector<int>> Matrix (SIZE, vector<int>(SIZE, 0));

    for(int i = 0; i < SIZE; i++) {
      for(int j = 0; j < SIZE; j++) {
        cin>>Matrix[i][j];
      }
    }

    int di[] = {-1, -1, 1, 1, -1, 1};
    int dj[] = {-1, 1, -1, 1, 0, 0};
    int ans = -MAX;

    for(int i = 1; i < SIZE - 1; i++) {
      for(int j = 1; j < SIZE - 1; j++) {

        int sum = Matrix[i][j];
        for(int k = 0; k < MOV; k++) {
          int ni = i + di[k];
          int nj = j + dj[k];
          
          sum += Matrix[ni][nj];
        }
        ans = max(ans, sum);
      }
    }

    cout<<ans<<endl;

    return 0;
}

