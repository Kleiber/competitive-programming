/**
*  Generated by tpp tool
*  File: abc343_c_343.cpp
*  Created: 03-03-2024 17:16:45
**/

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <bitset>
#include <sstream>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <stack>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
using namespace std;


const long long MAX = 1e18+1;

long long N;
vector<long long> V;

bool isPalindrome(long long n) {
  string s, r;

  stringstream in;
  in<<n;

  s = in.str();
  r = s;
  reverse(r.begin(), r.end());

  return r == s;
}

void cubicPalindromes() {
  long long num = 1;

  long long cubic = 1;
  while(cubic < MAX) {
    if(isPalindrome(cubic)) V.push_back(cubic);

    num = num + 1;
    cubic = num*num*num;
  }
}


int main() {
    // do not remove this code if you use cin or cout
    ios::sync_with_stdio(false);
    cin.tie(0);

    cubicPalindromes();

    cin>>N;

    long long ans;

    for(int i = 0; i < V.size(); i++) {
      if(V[i] > N) break;
      ans = V[i];
    }

    cout<<ans<<endl;

    return 0;
}

