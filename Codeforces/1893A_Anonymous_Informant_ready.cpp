/**
*  Generated by tpp tool
*  File: 1893A_Anonymous_Informant.cpp
*  Created: 08-06-2024 08:34:59
**/

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <bitset>
#include <sstream>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <stack>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
using namespace std;


vector<int> V;
vector<bool> visited;
int t, n, k;

bool dfs(int u, int times) {
  if(times == 0) return 1;
  if(visited[u]) return 1;
  if(V[u] > n) return 0;

  visited[u] = 1;

  int v = (n + ((u - V[u]) % n)) % n;

  return dfs(v, times - 1);
}

int main() {
    // do not remove this code if you use cin or cout
    ios::sync_with_stdio(false);
    cin.tie(0);

    cin>>t;

    while(t--) {
      cin>>n>>k;

      V = vector<int>(n);
      visited = vector<bool>(n, 0);

      for(int i = 0; i < n; i++) cin>>V[i];

      if(dfs(n - 1, k)) cout<<"Yes"<<endl;
      else cout<<"No"<<endl;
    }

    return 0;
}
