/**
*  Generated by tpp tool
*  File: 1926E_Vlad_And_An_Odd_Ordering.cpp
*  Created: 21-02-2024 19:36:27
**/

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <bitset>
#include <sstream>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <stack>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
using namespace std;


int main() {
    // do not remove this code if you use cin or cout
    ios::sync_with_stdio(false);
    cin.tie(0);

    int cases;
    cin>>cases;

    while(cases--) {
      int n, k;
      cin>>n>>k;

      int size = ceil(log2(n));
      vector<int> B(size), S(size);

      for(int  i = 0; i < size; i++) {
        int blockStart = 1<<i;
        int blockSize = 1<<(i+1);

        int intervalSize = n - blockStart + 1;
        int block = ceil(intervalSize/(double)blockSize);

        B[i] = block;
        S[i] = (i == 0)? block : S[i - 1] + block;  
      }

      int pos = lower_bound(S.begin(), S.end(), k) - S.begin();

      int cont = (pos == 0)? 0 : S[pos - 1];
      int ind = k - cont; 

      int odd = 2*(ind - 1) + 1;
      int num = (1<<pos)*odd ;
      cout<<num<<endl;
    }

    return 0;
}

