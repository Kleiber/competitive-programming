/**
*  Generated by tpp tool
*  File: 1955B_Progressive_Square.cpp
*  Created: 08-04-2024 11:51:24
**/

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <bitset>
#include <sstream>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <stack>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
using namespace std;


const int INF = 1e6 + 5;

int main() {
    // do not remove this code if you use cin or cout
    ios::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin>>t;

    while(t--) {
      int n, c, d;
      cin>>n>>c>>d;

      vector<long long int> M(n*n), R;

      for(int i = 0; i < n*n; i++) cin>>M[i];

      sort(M.begin(), M.end());

      for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
          if(i == 0 && j == 0) R.push_back(M[0]);
          else R.push_back(M[0] + i * c + j * d);
        }
      }

      sort(R.begin(), R.end());

      bool ans = 1;
      for(int i = 0; i < M.size(); i++) {
        if(M[i] != R[i]) {
          ans = 0;
          break;
        }
      }

      if(ans) cout<<"YES"<<endl;
      else cout<<"NO"<<endl;
    }

    return 0;
}

