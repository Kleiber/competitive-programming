/**
*  Generated by tpp tool
*  File: 1954D_Colored_Balls.cpp
*  Created: 14-04-2024 18:59:08
**/

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <bitset>
#include <sstream>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <stack>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
using namespace std;


const int MOD = 998244353;
const int MAX = 5005;

int N;
vector<int> A;
int dp[MAX][MAX];

int solve(int ind, int balls) {
  if(ind == N) return 0;
  if(dp[ind][balls] != -1) return dp[ind][balls];

  int groups = 0;

  if(balls > A[ind]) groups = (balls + A[ind] + 1)/2;
  else groups = A[ind];


  return dp[ind][balls] = (groups + solve(ind + 1, balls) + solve(ind + 1, balls + A[ind])) % MOD;
}


int main() {
    // do not remove this code if you use cin or cout
    ios::sync_with_stdio(false);
    cin.tie(0);

    cin>>N;

    A = vector<int>(N);
    memset(dp, -1, sizeof(dp));

    for(int i = 0; i < N; i++) cin>>A[i];

    sort(A.begin(), A.end());

    cout<<solve(0, 0)<<endl;

    return 0;
}

