/**
*  Generated by tpp tool
*  File: 1971E_Find_The_Car.cpp
*  Created: 12-05-2024 05:15:11
**/

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <bitset>
#include <sstream>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <stack>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
using namespace std;


int main() {
    // do not remove this code if you use cin or cout
    ios::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin>>t;

    while(t--) {
      int n, k, q;
      cin>>n>>k>>q;

      vector<long long> D(k + 1, 0), T(k + 1, 0);

      for(int i = 1; i <= k; i++) cin>>D[i];
      for(int i = 1; i <= k; i++) cin>>T[i];

      for(int i = 1; i <= q; i++) {
        long long d;
        cin>>d;

        int index = lower_bound(D.begin(), D.end(), d) - D.begin();

        long long ans = 0;
        if(d == D[index]) ans = T[index];
        else ans = T[index - 1] + (d - D[index - 1]) * (T[index] - T[index - 1]) / (D[index] - D[index - 1]);

        cout<<ans<<" ";
      }
      cout<<endl;
    }

    return 0;
}

