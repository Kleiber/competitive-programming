/**
*  Generated by tpp tool
*  File: 1926C_Vlad_And_A_Sum_Of_Sum_Of_Digits.cpp
*  Created: 21-02-2024 16:34:20
**/

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <bitset>
#include <sstream>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <stack>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
using namespace std;


#define MAX 200005

int sum[MAX];

int digitSum(int n) {
  int sum = 0;

  while(n > 0) {
    sum += n % 10;
    n = n /10;
  }

  return sum;
}

void init() {
  memset(sum, 0, sizeof(sum));
  for(int i = 1; i < MAX; i++) {
    sum[i] = sum[i - 1] + digitSum(i);
  }
}


int main() {
    // do not remove this code if you use cin or cout
    ios::sync_with_stdio(false);
    cin.tie(0);

    init();

    int cases;
    cin>>cases;
    
    while(cases--) {
      int n;
      cin>>n;

      cout<<sum[n]<<endl;
    }

    return 0;
}

