/**
*  Generated by tpp tool
*  File: 1921B_Arranging_Cats.cpp
*  Created: 15-01-2024 11:50:01
**/

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <bitset>
#include <sstream>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <stack>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
using namespace std;


#define ONE '1'

int diff(int n, string s, string f) {
  int contS, contF;

  contS = contF = 0;
  for(int i = 0; i < n; i++) {
    if(s[i] == ONE) contS++;
    if(f[i] == ONE) contF++;
  }

  if(contF <= contS) return contS;
  else return contS + abs(contS - contF);
}

int main() {
    // do not remove this code if you use cin or cout
    ios::sync_with_stdio(false);
    cin.tie(0);

    int cases;
    cin>>cases;

    while(cases--) {
      int n;
      string s, f;
      cin>>n;
      cin>>s>>f;

      for(int i = 0; i < n; i++) {
        if(s[i] == f[i]) {
          s[i] = f[i] = '0';
        }
      }


      int ans = diff(n, s, f);
      cout<<ans<<endl;
    }

    return 0;
}

