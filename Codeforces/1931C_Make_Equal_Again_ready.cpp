/**
*  Generated by tpp tool
*  File: 1931C_Make_Equal_Again.cpp
*  Created: 23-02-2024 00:03:21
**/

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <bitset>
#include <sstream>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <stack>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
using namespace std;


int main() {
    // do not remove this code if you use cin or cout
    ios::sync_with_stdio(false);
    cin.tie(0);

    int cases;
    cin>>cases;

    while(cases--) {
      int n;
      cin>>n;

      vector<int> V(n);
      for(int i = 0; i < n; i++) cin>>V[i];

      map<int,int> M;
      int l, r;

      for(l = 0; l < n; l++) {
        if(V[l] != V[0]) break;
        else M[V[0]]++;
      }

      for(r = n - 1; r >= 0; r--) {
        if(V[r] != V[n - 1]) break;
        else M[V[n - 1]]++;
      }

      int ans = 0;
      if(M.size() == 1) ans = (r >= l)? r - l + 1 : 0;
      else ans = min(n - l, r + 1);

      cout<<ans<<endl;
    }

    return 0;
}

