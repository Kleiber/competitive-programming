/**
*  Generated by tpp tool
*  File: 1931D_Divisible_Pairs.cpp
*  Created: 23-02-2024 00:39:30
**/

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <bitset>
#include <sstream>
#include <set>
#include <map>
#include <unordered_map> 
#include <unordered_set>
#include <queue>
#include <stack>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
using namespace std;


int main() {
    // do not remove this code if you use cin or cout
    ios::sync_with_stdio(false);
    cin.tie(0);

    int cases;
    cin>>cases;
 
    while(cases--) {
      int n, x, y;
      cin>>n>>x>>y;
 
      vector<int> V(n);
      for(int i = 0; i < n; i++) cin>>V[i];
 
      map<pair<int,int>, int> M;
      long long int ans = 0;
 
      for(int i = n - 1; i >= 0; i--) {
        int modX = V[i] % x;
        int modY = V[i] % y;

        int first = (x - modX) % x;
        int second = modY;

        ans += M[make_pair(first, second)];
        M[make_pair(modX, modY)]++;
      }
 
      cout<<ans<<endl;
    }

    return 0;
}

