/**
*  Generated by tpp tool
*  File: dfs.cpp
*  Created: 21-10-2024 13:16:42
**/

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <bitset>
#include <sstream>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <stack>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
using namespace std;


const int MAX = 1e5;

vector<int> graph[MAX];
bool visited[MAX];

void dfs(int u) {
  visited[u] = 1;

  for(int v: graph[u]) {
    if(!visited[v]) dfs(v);
  }
}

int main() {
    // do not remove this code if you use cin or cout
    ios::sync_with_stdio(false);
    cin.tie(0);

    graph[0].push_back(1);
    graph[1].push_back(0);

    graph[1].push_back(2);
    graph[2].push_back(1);

    graph[3].push_back(4);
    graph[4].push_back(3);

    dfs(0);
    dfs(3);

    return 0;
}

