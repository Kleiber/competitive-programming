/**
*  Generated by tpp tool
*  File: Team_Tic_Tac_Toe.cpp
*  Created: 19-02-2024 23:25:25
**/

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <bitset>
#include <sstream>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <stack>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
using namespace std;


#define MAX 3

int main() {
    // do not remove this code if you use cin or cout
    ios::sync_with_stdio(false);
    cin.tie(0);

    freopen("tttt.in", "r", stdin);
    freopen("tttt.out", "w", stdout);

    vector<string> V(MAX);
    for(int i = 0; i < MAX; i++) cin>>V[i];

    set<string> S;
    set<char> C;
    string set;

    for(int i = 0; i < MAX; i++) {
      C.clear();
      for(int j = 0; j < MAX; j++) C.insert(V[i][j]);

      set = "";
      for(auto c: C) set += c;
      S.insert(set);
    }

    for(int j = 0; j < MAX; j++) {
      C.clear();
      for(int i = 0; i < MAX; i++) C.insert(V[i][j]);

      set = "";
      for(auto c: C) set += c;
      S.insert(set);
    }

    C.clear();
    for(int i = 0; i < MAX; i++) {
      for(int j = 0; j < MAX; j++) {
        if(i == j) C.insert(V[i][j]);
      }
    }

    set = "";
    for(auto c: C) set += c;
    S.insert(set);

    C.clear();
    for(int i = 0; i < MAX; i++) {
      for(int j = 0; j < MAX; j++) {
        if(i + j == MAX - 1) C.insert(V[i][j]);
      }
    }

    set = "";
    for(auto c: C) set += c;
    S.insert(set);

    int individual = 0;
    int team = 0;
    for(auto s: S) {
      if(s.size() == 1) individual++;
      if(s.size() == 2) team++;
    }

    cout<<individual<<endl;
    cout<<team<<endl;

    return 0;
}

