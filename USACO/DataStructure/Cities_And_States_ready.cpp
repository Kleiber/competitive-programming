/**
*  Generated by tpp tool
*  File: Cities_And_States.cpp
*  Created: 23-02-2024 17:51:46
**/

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <bitset>
#include <sstream>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <stack>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
using namespace std;


int main() {
    // do not remove this code if you use cin or cout
    ios::sync_with_stdio(false);
    cin.tie(0);

    freopen("citystate.in", "r",stdin);
    freopen("citystate.out", "w", stdout);

    int N;
    cin>>N;

    vector<pair<string, string>> V;
    for(int i = 0; i < N; i++) {
      string city, state;
      cin>>city>>state;

      city = city.substr(0, 2);
      V.push_back(make_pair(city, state));
    }

    map<string, int> M;
    long long int ans = 0;
    for(int i = 0; i < V.size(); i++) {
      if(V[i].first != V[i].second) ans += M[V[i].first + V[i].second];
      M[V[i].second + V[i].first]++;
    }

    cout<<ans<<endl;

    return 0;
}

