/**
*  Generated by tpp tool
*  File: Year_Of_The_Cow.cpp
*  Created: 20-02-2024 09:33:55
**/

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <bitset>
#include <sstream>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <stack>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
using namespace std;


#define MOD 12
#define PREV "previous"


struct Data {
  string name;
  string relative;
  int year;
  bool isNext;
};

int main() {
    // do not remove this code if you use cin or cout
    ios::sync_with_stdio(false);
    cin.tie(0);

    map<string, int> M;
    M["Ox"] = 0;
    M["Tiger"] = 1;
    M["Rabbit"] = 2;
    M["Dragon"] = 3;
    M["Snake"] = 4;
    M["Horse"] = 5;
    M["Goat"] = 6;
    M["Monkey"] = 7;
    M["Rooster"] = 8;
    M["Dog"] = 9;
    M["Pig"] = 10;
    M["Rat"] = 11;

    int N;
    cin>>N;

    vector<Data> V;
    for(int i = 0; i < N; i++) {
      string name, relative, previous, animal, unused;

      cin>>name>>unused>>unused>>previous>>animal>>unused>>unused>>relative;

      bool isNext = (previous == PREV)? 0 : 1;
      int year = M[animal];

      V.push_back(Data{name, relative, year, isNext});
    }

    map<string, int> P;
    P["Bessie"] = 0;

    for(int i = 0; i < N;i ++) {
      int dir = V[i].isNext? 1 : -1;

      int year = P[V[i].relative] + dir;
      while(((year % MOD) + MOD) % MOD != V[i].year) {
        year += dir;
      }

      P[V[i].name] = year;
    }

    int ans = abs(P["Bessie"] - P["Elsie"]);
    cout<<ans<<endl;

    return 0;
}

